//0||0
//@region=[DimGeoView].[HGeo].[SubSubRegion].&[09_SSR09]
//@country=[DimGeoView].[HGeo].[Country].&[653]
//@franchise=[DimBusinessFranchise].[HBusinessFranchiseGrp].&[BFG_NSO]
//@period=[DimPeriod].[Month].&[201110]
//@measure=[DimMeasureNames].[Name].&[LCUSD]
//@datatype=MTH
//@brand=[DimFranchiseBrand].[GroupType].&[0]
with

member [Measures].[Lag] as
	iif(instr(membertostr([DimPeriod].[Month].&[201110]),"Quarter") > 0,4,12)

member [Measures].[slice] as
	case when [DimFranchiseBrand].[GroupType].&[0] is [DimFranchiseBrand].[GroupType].&[1] then
		"[DimFranchiseBrand].[GroupType].[All]"
		when [DimFranchiseBrand].[GroupType].&[0] is [DimFranchiseBrand].[GroupType].[All] then
		"[DimFranchiseBrand].[GroupType].[All]"
	else "linkmember(ancestor([DimFranchiseBrand].[GroupType].&[0],
		[DimFranchiseBrand].[HFranchiseBrand].[Market]),[DimFranchiseBrand].[Market])" end

member [DimBusinessFranchise].[HBusinessFranchiseGrp].[TotalSales] as
	sum(AllNovarticsBrands,[Measures].[Data])

set AllNovarticsBrands as
	IIF(Isleaf([DimBusinessFranchise].[HBusinessFranchiseGrp].&[BFG_NSO])
		,[DimBusinessFranchise].[HBusinessFranchiseGrp].&[BFG_NSO]
		,descendants([DimBusinessFranchise].[HBusinessFranchiseGrp].&[BFG_NSO],1)
		-{[DimBusinessFranchise].[HBusinessFranchiseGrp].[TherapticalArea].&[UNKNOWN],
		[DimBusinessFranchise].[HBusinessFranchiseGrp].[TherapticalArea].&[UNKNOWN].&[UNKNOWN],
		[DimBusinessFranchise].[HBusinessFranchiseGrp].[TherapticalArea].&[UNKNOWN].&[UNKNOWN].&[UNKNOWN]})

member [Measures].[Display Name] as
	case when [DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember.name = "TotalSales" then "Total Sum"
	else [DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember.name end

member [Measures].[Sales (in m)] as
	IIF(isempty([Measures].[Data]),0,[Measures].[Data]), format_string = '0.########'

member [Measures].[ParentString] as
	case when [DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember.level.ordinal = 0 then
			""
		when [DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember.level.ordinal = 1 then
			case when [DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember.name = "General Medicine"
				then "[DimFranchiseBrand].[TherapeuticArea].&[1]"
				else "[DimFranchiseBrand].[TherapeuticArea].&[6]" end
		when [DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember.level.ordinal = 2 then
			"[DimFranchiseBrand].[FranchiseGroup].&["+ 
			linkmember([DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember,
			[DimBusinessFranchise].[BusinessFranchiseGrp]).properties("IndicationAreaGrp") +"]"
		when [DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember.level.ordinal = 3 then
			"[DimFranchiseBrand].[Franchise].&["+ 
			linkmember([DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember,
			[DimBusinessFranchise].[BusinessFranchise]).properties("IndicationArea") +"]"
		else
			"Error"
	end

member [Measures].[ParentSales] as
	(strtomember([Measures].[ParentString]),[Measures].[Data],[DimBusinessFranchise].[HBusinessFranchiseGrp].[All],
	strtomember([Measures].[slice]))


member [Measures].[PrevYearSales] as
	([Measures].[Data],[DimPeriod].[Month].&[201110].lag([Measures].[Lag]))

member [Measures].[Growth vs PY] as
IIF ([Measures].[Data]  and [Measures].[PrevYearSales] <> 0, 
	([Measures].[Data] - [Measures].[PrevYearSales] ) 
	/ ([Measures].[PrevYearSales]) * 100,"-"), format_string = '0.########'

member [Measures].[Market share] as
	case when [DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember is [DimBusinessFranchise].[HBusinessFranchiseGrp].[All]
	or [DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember.name = "TotalSales"
	or [DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember.name ="GM-Established Medicines" 
	or ([DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember.level.ordinal = 2 and
			linkmember([DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember,
				[DimBusinessFranchise].[BusinessFranchiseGrp]).properties("IsBFGrpMSCalculated")="0"
		)
	or ([DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember.level.ordinal = 3 and 
			linkmember([DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember,
				[DimBusinessFranchise].[BusinessFranchise]).properties("IsBFMSCalculated")="0" 
		)
	then
	null
	else
	IIF([Measures].[ParentSales] and [Measures].[Data] <> 0, 
	([Measures].[Data]/[Measures].[ParentSales])*100, "-")
	end, format_string = '0.########'

member [Measures].[Prev Market share] as
	IIF([Measures].[Market share] = "-",
		"-",([Measures].[Market share],[DimPeriod].[Month].&[201110].lag([Measures].[Lag])))

member [Measures].[D vs PY] as
IIF ([Measures].[Market share] <> "-" and [Measures].[Prev Market share] <> "-", 
	([Measures].[Market share] - [Measures].[Prev Market share] ) ,"-"), format_string = '0.########'

member [Measures].[Market Growth] as
	case when [DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember is [DimBusinessFranchise].[HBusinessFranchiseGrp].[All]
			or [DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember.name = "TotalSales" 
			or [DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember.name ="GM-Established Medicines"
		then null
	else
	(strtomember([Measures].[ParentString]),[Measures].[Growth vs PY],[DimBusinessFranchise].[HBusinessFranchiseGrp].[All],
	strtomember([Measures].[slice]))
	end

member [Measures].[Evol. Index] as
	case when [DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember is [DimBusinessFranchise].[HBusinessFranchiseGrp].[All]
	or [DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember.name = "TotalSales"
	or [DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember.name ="GM-Established Medicines" 
	or ([DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember.level.ordinal = 2 and
			linkmember([DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember,
				[DimBusinessFranchise].[BusinessFranchiseGrp]).properties("IsBFGrpMSCalculated")="0"
		)
	or ([DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember.level.ordinal = 3 and 
			linkmember([DimBusinessFranchise].[HBusinessFranchiseGrp].currentmember,
				[DimBusinessFranchise].[BusinessFranchise]).properties("IsBFMSCalculated")="0" 
		)
	then
	null
	else
		case when [Measures].[Growth vs PY] = "-" or [Measures].[Market Growth] = "-"
		then "-"
		else (1 + [Measures].[Growth vs PY]/100) / (1 + [Measures].[Market Growth]/100)*100 end
	end, format_string = '0.########'

member [Measures].[Level] as
[DimLevel].[Num].currentmember.name

select 
{
	[Measures].[Level],			//Level||1||||Level
	[Measures].[Display Name],	//Franchise||1||||
	[Measures].[Sales (in m)],	//Sales (in m)||1||||
	[Measures].[Growth vs PY],	//Growth vs PY||1||||
	[Measures].[Market share],	//Market share||1||||
	[Measures].[D vs PY],		//D vs PY||1||||
	[Measures].[Evol. Index]	//Evol. Index||1||||
} on columns,
{
	nonempty(
	{
		([DimBusinessFranchise].[HBusinessFranchiseGrp].[TotalSales],[DimLevel].[Num].&[1]),
		(order(AllNovarticsBrands,[Measures].[Data],bdesc),[DimLevel].[Num].&[2])
	},[Measures].[Data])
}//Name||0||$$level||0||
on rows
from
// begin subcube
(
	select 
		{[DimBusinessFranchise].[HBusinessFranchiseGrp].&[BFG_NSO]} on 0
	from [MMMCube]
)
//end subcube
where (
		[DimPeriod].[Month].&[201110],
		[DimMeasureNames].[Name].&[LCUSD],
		[DimDataSource].[Source].&[MTH],
		[DimGeoView].[HGeo].[Country].&[653],
		[DimFranchiseBrand].[GroupType].&[0]
	)